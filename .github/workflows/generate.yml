# This is a basic workflow to help you get started with Actions

name: Wygeneruj

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  repository_dispatch:
    types: [ "generuj" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Setup Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # Choose the appropriate Python version

      - name: Install dependencies
        run: |
         pip install Pillow
         pip install python-barcode


      - name: Download Files
        run: |
         curl -L https://limsezam.ovh/input/selected_option.txt -o gen/selected_option.txt
         curl -L https://limsezam.ovh/ean_input.txt -o gen/ean_input.txt

         if grep -q "canalp_2" gen/selected_option.txt; then

         echo "Canal | IMG style!"

         curl -L https://limsezam.ovh/input/temp.png -o gen/test.png

         curl -L https://limsezam.ovh/input/c1_i.txt -o gen/sub1.txt
         curl -L https://limsezam.ovh/input/c2_i.txt -o gen/text1.txt

         curl -L https://limsezam.ovh/input/c3_i.txt -o gen/sub3.txt
         curl -L https://limsezam.ovh/input/c4_i.txt -o gen/text3.txt

         fi

         if grep -q "canalp_1" gen/selected_option.txt; then

         echo "Canal | MODERN style!"

         curl -L https://limsezam.ovh/input/c1.txt -o gen/sub1.txt
         curl -L https://limsezam.ovh/input/c2.txt -o gen/text1.txt

         curl -L https://limsezam.ovh/input/c3.txt -o gen/sub3.txt
         curl -L https://limsezam.ovh/input/c4.txt -o gen/text3.txt

         fi
        
         if grep -q "canalp_0" gen/selected_option.txt; then

         echo "Canal | CLASSIC style!"

          curl -L https://limsezam.ovh/input/c_title.txt -o gen/title.txt
          curl -L https://limsezam.ovh/input/c_subtitle.txt -o gen/desc.txt

          curl -L https://limsezam.ovh/input/c1_c.txt -o gen/sub1.txt
          curl -L https://limsezam.ovh/input/c2_c.txt -o gen/text1.txt

          curl -L https://limsezam.ovh/input/c3_c.txt -o gen/sub3.txt
          curl -L https://limsezam.ovh/input/c4_c.txt -o gen/text3.txt

          curl -L https://limsezam.ovh/input/price.txt -o gen/price.txt

         fi



         if grep -q "option" gen/selected_option.txt; then

         echo "Normal render"

         curl -L https://limsezam.ovh/input/input_0.txt -o gen/title.txt
         curl -L https://limsezam.ovh/input/input_1.txt -o gen/desc.txt

         curl -L https://limsezam.ovh/input/input_2.txt -o gen/sub1.txt
         curl -L https://limsezam.ovh/input/input_3.txt -o gen/text1.txt

         curl -L https://limsezam.ovh/input/input_4.txt -o gen/sub2.txt
         curl -L https://limsezam.ovh/input/input_5.txt -o gen/text2.txt

         curl -L https://limsezam.ovh/input/input_6.txt -o gen/sub3.txt
         curl -L https://limsezam.ovh/input/input_7.txt -o gen/text3.txt

         curl -L https://limsezam.ovh/input/input_8.txt -o gen/text4.txt

         curl -L https://limsezam.ovh/input/price.txt -o gen/price.txt

         curl -L https://limsezam.ovh/input/promotion.txt -o gen/promotion.txt

         
         curl -L https://limsezam.ovh/input/extra5.txt -o gen/extra5.txt
         curl -L https://limsezam.ovh/input/extra5_desc.txt -o gen/extra5_desc.txt



         fi
         

      - name: Generate Images - Small (Laptop)
        run: |
         if grep -q "option1" gen/selected_option.txt; then
          python gen/laptop.py
         fi

         if grep -q "option2" gen/selected_option.txt; then
          python gen/laptop_alt.py
         fi

         if grep -q "option3" gen/selected_option.txt; then
          python gen/laptop_prom.py
         fi
         
         if grep -q "option4" gen/selected_option.txt; then
          python gen/laptop_mini.py
         fi         
                 

         if grep -q "canalp" gen/selected_option.txt; then
          python gen/canalp.py
         fi

         if grep -q "canalp_1" gen/selected_option.txt; then
          python gen/canalp_1.py
         fi

         if grep -q "canalp_2" gen/selected_option.txt; then
          python gen/canalp_2.py
         fi  
    # option1 - Klasyczny
    # option2 - Alternatywny 
    # option3 - Promocja

      - name: Upload Small
        uses: actions/upload-artifact@v4
        with:
          name: Opisowka_Laptop
          path: laptop.png


      # - name: Upload Small
      #   uses: wlixcc/SFTP-Deploy-Action@v1.2.4
      #   with:
      #       username: ${{ secrets.SFTP_USERNAME }}
      #       server: ${{ secrets.SFTP_SERVER }}
      #       port: 21
      #       local_path: './laptop.png'
      #       remote_path: '/generated/laptop.png'
      #       sftp_only: false
      #       password: ${{ secrets.SFTP_PASSWORD }}

      - name: SFTP Deploy - Small
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.SFTP_SERVER }}
          username: ${{ secrets.SFTP_USERNAME }}
          password: ${{ secrets.SFTP_PASSWORD }}
          port: 21
          local-dir: './laptop/'
          server-dir: "/generated/"









      - name: Generate Images - Med (TV)
        run: python gen/tv.py

      # - name: Upload Med
      #   uses: wlixcc/SFTP-Deploy-Action@v1.2.4
      #   with:
      #       username: ${{ secrets.SFTP_USERNAME }}
      #       server: ${{ secrets.SFTP_SERVER }}
      #       port: 21
      #       local_path: './tv.png'
      #       remote_path: '/generated/tv.png'
      #       sftp_only: false
      #       password: ${{ secrets.SFTP_PASSWORD }}

      - name: SFTP Deploy - Med
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.SFTP_SERVER }}
          username: ${{ secrets.SFTP_USERNAME }}
          password: ${{ secrets.SFTP_PASSWORD }}
          port: 21
          local-dir: './tv/'
          server-dir: "/generated/"


            


      - name: Generate Images - Big (A4)
        run: python gen/a4.py

      # - name: Upload A4
      #   uses: wlixcc/SFTP-Deploy-Action@v1.2.4
      #   with:
      #       username: ${{ secrets.SFTP_USERNAME }}
      #       server: ${{ secrets.SFTP_SERVER }}
      #       port: 21
      #       local_path: './a4.png'
      #       remote_path: '/generated/a4.png'
      #       sftp_only: false
      #       password: ${{ secrets.SFTP_PASSWORD }}

      - name: SFTP Deploy - A4
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.SFTP_SERVER }}
          username: ${{ secrets.SFTP_USERNAME }}
          password: ${{ secrets.SFTP_PASSWORD }}
          port: 21
          local-dir: './a4/'
          server-dir: "/generated/"

